/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { CovieApi } from "@fern-api/covie";
import * as core from "../../../../core";

export const Policies: core.serialization.ObjectSchema<serializers.Policies.Raw, CovieApi.Policies> =
    core.serialization.object({
        count: core.serialization.number().optional(),
        filteredCount: core.serialization.property("filtered_count", core.serialization.number().optional()),
        embedded: core.serialization.property(
            "_embedded",
            core.serialization.lazyObject(async () => (await import("../../..")).EmbeddedPolicies).optional()
        ),
    });

export declare namespace Policies {
    interface Raw {
        count?: number | null;
        filtered_count?: number | null;
        _embedded?: serializers.EmbeddedPolicies.Raw | null;
    }
}
