/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { CovieApi } from "@fern-api/covie";
import * as core from "../../../../core";

export const Driver: core.serialization.ObjectSchema<serializers.Driver.Raw, CovieApi.Driver> =
    core.serialization.object({
        name: core.serialization.lazyObject(async () => (await import("../../..")).Name).optional(),
        dateOfBirth: core.serialization.property("date_of_birth", core.serialization.string().optional()),
        maritalStatus: core.serialization.property(
            "marital_status",
            core.serialization.lazy(async () => (await import("../../..")).MaritalStatus).optional()
        ),
        gender: core.serialization.lazy(async () => (await import("../../..")).Gender).optional(),
        ageLicensed: core.serialization.property("age_licensed", core.serialization.number().optional()),
        licenseNumber: core.serialization.property("license_number", core.serialization.string().optional()),
        licenseState: core.serialization.property("license_state", core.serialization.string().optional()),
        isPrimary: core.serialization.property("is_primary", core.serialization.boolean().optional()),
    });

export declare namespace Driver {
    interface Raw {
        name?: serializers.Name.Raw | null;
        date_of_birth?: string | null;
        marital_status?: serializers.MaritalStatus.Raw | null;
        gender?: serializers.Gender.Raw | null;
        age_licensed?: number | null;
        license_number?: string | null;
        license_state?: string | null;
        is_primary?: boolean | null;
    }
}
