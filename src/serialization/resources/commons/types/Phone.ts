/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { CovieApi } from "@fern-api/covie";
import * as core from "../../../../core";

export const Phone: core.serialization.ObjectSchema<serializers.Phone.Raw, CovieApi.Phone> = core.serialization.object({
    type: core.serialization.lazy(async () => (await import("../../..")).PhoneType).optional(),
    number: core.serialization.string().optional(),
    isPrimary: core.serialization.property("is_primary", core.serialization.boolean().optional()),
});

export declare namespace Phone {
    interface Raw {
        type?: serializers.PhoneType.Raw | null;
        number?: string | null;
        is_primary?: boolean | null;
    }
}
