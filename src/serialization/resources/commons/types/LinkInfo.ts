/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { CovieApi } from "@fern-api/covie";
import * as core from "../../../../core";

export const LinkInfo: core.serialization.ObjectSchema<serializers.LinkInfo.Raw, CovieApi.LinkInfo> =
    core.serialization.object({
        self: core.serialization.lazyObject(async () => (await import("../../..")).LinkDetails).optional(),
        carrierLogo: core.serialization.property(
            "carrier_logo",
            core.serialization.lazyObject(async () => (await import("../../..")).LinkDetails).optional()
        ),
        uploadedDocuments: core.serialization.property(
            "uploaded_documents",
            core.serialization
                .list(core.serialization.lazyObject(async () => (await import("../../..")).LinkDetails))
                .optional()
        ),
    });

export declare namespace LinkInfo {
    interface Raw {
        self?: serializers.LinkDetails.Raw | null;
        carrier_logo?: serializers.LinkDetails.Raw | null;
        uploaded_documents?: serializers.LinkDetails.Raw[] | null;
    }
}
