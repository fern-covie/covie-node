/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { CovieApi } from "@fern-api/covie";
import * as core from "../../../../core";

export const EventBroadcast: core.serialization.ObjectSchema<serializers.EventBroadcast.Raw, CovieApi.EventBroadcast> =
    core.serialization.object({
        id: core.serialization.string().optional(),
        queuedAt: core.serialization.property("queued_at", core.serialization.string().optional()),
        broadcastAt: core.serialization.property("broadcast_at", core.serialization.string().optional()),
        requestUri: core.serialization.property("request_uri", core.serialization.string().optional()),
        responseCode: core.serialization.property("response_code", core.serialization.number().optional()),
        responseBody: core.serialization.property("response_body", core.serialization.string().optional()),
    });

export declare namespace EventBroadcast {
    interface Raw {
        id?: string | null;
        queued_at?: string | null;
        broadcast_at?: string | null;
        request_uri?: string | null;
        response_code?: number | null;
        response_body?: string | null;
    }
}
