/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { CovieApi } from "@fern-api/covie";
import * as core from "../../../../core";

export const RebroadcastEventResponse: core.serialization.ObjectSchema<
    serializers.RebroadcastEventResponse.Raw,
    CovieApi.RebroadcastEventResponse
> = core.serialization.object({
    count: core.serialization.number().optional(),
    embedded: core.serialization.property(
        "_embedded",
        core.serialization.lazyObject(async () => (await import("../../..")).EmbeddedRebroadcastEvents).optional()
    ),
});

export declare namespace RebroadcastEventResponse {
    interface Raw {
        count?: number | null;
        _embedded?: serializers.EmbeddedRebroadcastEvents.Raw | null;
    }
}
