/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "./environments";
import * as core from "./core";
import { Client as AccountClient } from "./api/resources/account/client/Client";
import { Client as ApplicationClient } from "./api/resources/application/client/Client";
import { Client as EventClient } from "./api/resources/event/client/Client";
import { Client as PolicyClient } from "./api/resources/policy/client/Client";

export declare namespace CovieApiClient {
    interface Options {
        environment?: environments.CovieApiEnvironment | string;
        credentials?: core.Supplier<core.BasicAuth>;
    }
}

export class CovieApiClient {
    constructor(private readonly options: CovieApiClient.Options) {}

    #account: AccountClient | undefined;

    public get account(): AccountClient {
        return (this.#account ??= new AccountClient(this.options));
    }

    #application: ApplicationClient | undefined;

    public get application(): ApplicationClient {
        return (this.#application ??= new ApplicationClient(this.options));
    }

    #event: EventClient | undefined;

    public get event(): EventClient {
        return (this.#event ??= new EventClient(this.options));
    }

    #policy: PolicyClient | undefined;

    public get policy(): PolicyClient {
        return (this.#policy ??= new PolicyClient(this.options));
    }
}
